name: Release on Tag

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  releases: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      MODULE_ZIP_NAME: visage.zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run pack command
        run: npm run pack

      - name: Create zip of all dist files
        run: |
          cd dist
          zip -r ../${{ env.MODULE_ZIP_NAME }} .

      - name: Generate Changelog
        run: |
          # Get the previous tag that starts with 'v', ignoring all other tags like 'latest'
          PREVIOUS_TAG=$(git tag --sort=-v:refname | grep "^v" | sed -n '2p')
          
          echo "## Release ${{ github.ref_name }}" > changelog.md
          echo "" >> changelog.md
          echo "**Build Details:**" >> changelog.md
          echo "- **Commit:** ${{ github.sha }}" >> changelog.md
          echo "- **Author:** ${{ github.actor }}" >> changelog.md
          echo "" >> changelog.md
          echo "---" >> changelog.md
          echo "" >> changelog.md
          echo "## Changelog" >> changelog.md

          if [ -z "$PREVIOUS_TAG" ]; then
            # If no previous v-tag is found, log only the current commit's message
            echo "No previous v* tag found. Creating changelog from the current commit." >> changelog.md
            git log -n 1 --pretty=format:"* %s (%h)" --no-merges >> changelog.md
          else
            # Otherwise, log commits between the previous v-tag and the current tag
            echo "Changes since $PREVIOUS_TAG" >> changelog.md
            git log --pretty=format:"* %s (%h)" --no-merges $PREVIOUS_TAG..${{ github.ref_name }} | grep -E -i '^(feat|fix):' >> changelog.md
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body_path: "changelog.md"
          draft: false
          prerelease: false
          generate_release_notes: false # We use our own changelog
          files: |
            ${{ env.MODULE_ZIP_NAME }}
            dist/module.json

name: Auto Release on Develop

on:
  push:
    branches:
      - feat-local-release

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      MODULE_ZIP_NAME: visage.zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run pack command
        run: npm run pack

      - name: Delete existing releases and tags
        run: |
          # Delete private repo release and tag
          RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/latest \
            | jq -r '.id // empty')
          if [ ! -z "$RELEASE_ID" ]; then
            curl -X DELETE \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID \
              || echo "Failed to delete private repo release"
          else
            echo "No existing latest release to delete in private repo"
          fi
          
          curl -X DELETE \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/git/refs/tags/latest \
            || echo "No existing latest tag to delete"

      - name: Create zip of all dist files
        run: |
          cd dist
          zip -r ../${{ env.MODULE_ZIP_NAME }} .

      - name: Create Latest Release (Private Repo)
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          name: "Latest"
          body: |
            **Latest Release**
            
            **Build Details:**
            - **Commit:** ${{ github.sha }}
            - **Author:** ${{ github.actor }}

          draft: false
          prerelease: true
          generate_release_notes: false
          files: |
            ${{ env.MODULE_ZIP_NAME }}
            dist/module.json
